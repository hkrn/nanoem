name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CC: clang-6.0
      CXX: clang++-6.0
      FX9_BUILD_DEPENDENCIES_DIRECTORY: ${{ github.workspace }}/out/dependencies
      NANOEM_BUILD_DEPENDENCIES_DIRECTORY: ${{ github.workspace }}/out/dependencies
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: setup prerequisite packages
        run: |
          sudo apt-get install -y \
            clang-6.0 \
            cmake \
            libicu-dev \
            libgtk-3-dev \
            libglu1-mesa-dev \
            ninja-build \
            xorg-dev \
            libxi-dev \
            libxcursor-dev
      - name: checkout ffmpeg
        run: git clone https://github.com/ffmpeg/ffmpeg.git dependencies/ffmpeg
      - name: checkout glfw
        run: git clone https://github.com/glfw/glfw.git dependencies/glfw
      - name: build all dependencies of nanoem
        run: |
          NANOEM_TARGET_ARCHITECTURES="x86_64" \
          NANOEM_TARGET_CONFIGURATIONS="debug;release" \
          NANOEM_TARGET_COMPILER="clang" \
          NANOEM_DISABLE_BUILD_SENTRY_NATIVE="1" \
          NANOEM_DISABLE_BUILD_SPIRV_TOOLS="1" \
          cmake -DCONFIG=release -P $GITHUB_WORKSPACE/scripts/build.cmake
      - name: build nanoem itself
        run: |
          mkdir -p $GITHUB_WORKSPACE/out/core
          cd $GITHUB_WORKSPACE/out/core
          cmake \
            -DCMAKE_INSTALL_PREFIX=$PWD/install-root \
            -DCPACK_PACKAGING_INSTALL_PREFIX=$CIRCLE_ARTIFACTS \
            -DFX9_ENABLE_OPTIMIZER=OFF \
            -DNANOEM_ENABLE_BULLET=ON \
            -DNANOEM_ENABLE_GLFW=ON \
            -DNANOEM_ENABLE_ICU=ON \
            -DNANOEM_ENABLE_NMD=ON \
            -DNANOEM_ENABLE_TEST=ON \
            -DNANOEM_ENABLE_UPDATE_CREDITS=ON \
            -DNANOEM_INSTALL_EFFECT_PLUGIN=ON \
            -DNANOEM_INSTALL_FFMPEG_PLUGIN=ON \
            -DNANOEM_INSTALL_GIF_PLUGIN=OFF \
            -DNANOEM_INSTALL_LSMASH_PLUGIN=ON \
            -DNANOEM_INSTALL_MODEL_PLUGIN=ON \
            -DNANOEM_INSTALL_MOTION_PLUGIN=ON \
            -DNANOEM_INSTALL_ZIP_PLUGIN=OFF \
            -DNANOEM_TARGET_ARCHITECTURE=x86_64 \
            -DNANOEM_TARGET_COMPILER=clang \
            -GNinja \
            ../..
          cmake --build . --config release
      - name: test nanoem's unit tests
        run: |
          cd $GITHUB_WORKSPACE/out/core
          cmake --build . --target test
  codeql:
    runs-on: ubuntu-latest
    env:
      FX9_BUILD_DEPENDENCIES_DIRECTORY: ${{ github.workspace }}/out/dependencies
      NANOEM_BUILD_DEPENDENCIES_DIRECTORY: ${{ github.workspace }}/out/dependencies
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: cpp
          config-file: ${{ github.workspace }}/.github/codeql/codeql-config.yml
      - name: setup prerequisite packages
        run: |
          sudo apt-get install -y \
            cmake \
            libicu-dev \
            libgtk-3-dev \
            libglu1-mesa-dev \
            ninja-build \
            xorg-dev \
            libxi-dev \
            libxcursor-dev
      - name: checkout glfw
        run: git clone https://github.com/glfw/glfw.git dependencies/glfw
      - name: build all dependencies of nanoem
        run: |
          cd $GITHUB_WORKSPACE
          NANOEM_TARGET_ARCHITECTURES="x86_64" \
          NANOEM_TARGET_CONFIGURATIONS="debug;release" \
          NANOEM_TARGET_COMPILER="gcc" \
          NANOEM_DISABLE_BUILD_SENTRY_NATIVE="1" \
          NANOEM_DISABLE_BUILD_SPIRV_TOOLS="1" \
          cmake -DCONFIG=release -P $PWD/scripts/build.cmake
      - name: autobuild
        uses: github/codeql-action/autobuild@v1
      - name: perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
