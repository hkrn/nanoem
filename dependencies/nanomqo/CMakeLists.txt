project(nanomqo)
cmake_minimum_required(VERSION 2.8)
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

option(${PROJECT_NAME}_ENABLE_TEST_RUNNER "Enable building test runner option." ON)
option(${PROJECT_NAME}_ENABLE_FUZZER "Enable building fuzzing program with libFuzzer." OFF)

include_directories(${CMAKE_SOURCE_DIR}/deps)
add_library(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}/${PROJECT_NAME}.c ${PROJECT_NAME}_p.h)
set_target_properties(${PROJECT_NAME} PROPERTIES DEFINE_SYMBOL "${PROJECT_NAME}_DLL_EXPORTS")

if(${PROJECT_NAME_PREFIX}_ENABLE_TEST_RUNNER)
  add_executable(${PROJECT_NAME}_test ${CMAKE_CURRENT_SOURCE_DIR}/test.c)
  target_link_libraries(${PROJECT_NAME}_test ${PROJECT_NAME})
  if(APPLE)
    find_library(FOUNDATION_FRAMEWORK CoreFoundation)
    mark_as_advanced(FOUNDATION_FRAMEWORK)
    target_link_libraries(${PROJECT_NAME}_test ${FOUNDATION_FRAMEWORK})
  endif()
endif()

if(${PROJECT_NAME}_ENABLE_FUZZER)
  add_executable(${PROJECT_NAME}_fuzz fuzz.cc)
  set_property(TARGET ${PROJECT_NAME}_fuzz APPEND PROPERTY COMPILE_OPTIONS -fsanitize=fuzzer,address)
  set_property(TARGET ${PROJECT_NAME}_fuzz APPEND PROPERTY LINK_FLAGS -fsanitize=fuzzer,address)
  set_property(TARGET ${PROJECT_NAME}_fuzz APPEND PROPERTY LINK_LIBRARIES ${PROJECT_NAME})
endif()
